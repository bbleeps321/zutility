//---------------------------------------------------------------------------


#pragma hdrstop

#include "xpl_xstring.h"

//---------------------------------------------------------------------------
using namespace std;

/// Splits the original string around the specified delimiter and puts the parts
/// in the given output vector. Returns whether or not the string was split.
bool XString::Split(string orig, string delim, vector<string>& output)
{
	// TODO: make it work!
	return false;
}
//---------------------------------------------------------------------------
/// Splits the original string around the specified delimiter and puts the parts
/// in the given output vector. Returns whether or not the string was split.
bool XString::Split(String orig, String delim, vector<String>& output)
{
	// TODO: make it work! (just call other split method)
	return false;

}
//---------------------------------------------------------------------------
/// Returns whether or not the given string contains the specified delimiter.
bool Contains(std::string orig, std::string delim)
{
	return !(orig.find(delim, 0);
}
//---------------------------------------------------------------------------
/// Returns whether or not the given string contains the specified delimiter.
bool Contains(String orig, String delim)
{

}
//---------------------------------------------------------------------------

#pragma package(smart_init)
